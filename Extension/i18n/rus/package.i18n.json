/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"c_cpp.command.configurationSelect.title": "Выберите конфигурацию...",
	"c_cpp.command.configurationProviderSelect.title": "Изменение поставщика конфигурации...",
	"c_cpp.command.configurationEditJSON.title": "Изменить конфигурации (JSON)",
	"c_cpp.command.configurationEditUI.title": "Изменить конфигурации (пользовательский интерфейс)",
	"c_cpp.command.switchHeaderSource.title": "Переключить заголовок/источник",
	"c_cpp.command.enableErrorSquiggles.title": "Включить волнистые линии для ошибок",
	"c_cpp.command.disableErrorSquiggles.title": "Отключить волнистые линии для ошибок",
	"c_cpp.command.toggleIncludeFallback.title": "Переключить резервный вариант подсистемы IntelliSense при ошибках включения",
	"c_cpp.command.toggleDimInactiveRegions.title": "Переключить раскраску неактивных областей",
	"c_cpp.command.resetDatabase.title": "Сброс базы данных IntelliSense",
	"c_cpp.command.takeSurvey.title": "Пройти опрос",
	"c_cpp.command.buildAndDebugActiveFile.title": "Сборка и отладка активного файла",
	"c_cpp.command.logDiagnostics.title": "Журнал диагностики",
	"c_cpp.command.referencesViewGroupByType.title": "Группирование по ссылке",
	"c_cpp.command.referencesViewUngroupByType.title": "Отмена группирования по ссылке",
	"c_cpp.command.rescanWorkspace.title": "Повторное сканирование рабочей области",
	"c_cpp.command.vcpkgClipboardInstallSuggested.title": "Копировать команду vcpkg install в буфер обмена",
	"c_cpp.command.vcpkgOnlineHelpSuggested.title": "Посетите страницу справки по vcpkg",
	"c_cpp.configuration.formatting.description": "Configures the formatting engine",
	"c_cpp.configuration.formatting.clangFormat.description": "clang-format will be used to format code",
	"c_cpp.configuration.formatting.vcFormat.description": "The Visual C++ formatting engine will be used to format code",
	"c_cpp.configuration.formatting.Default.description": "clang-format will be used to format code",
	"c_cpp.configuration.formatting.Disabled.description": "Code formatting will be disabled",
	"c_cpp.configuration.vcFormat.indent.braces.description": "Braces are indented by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.description": "When a new line is typed, indent the new line relatively to:",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.outermostParenthesis.description": "the outermost open parenthesis",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.innermostParenthesis.description": "the innermost open parenthesis",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.statementBegin.description": "the beginning of the current statement",
	"c_cpp.configuration.vcFormat.indent.preserveIndentationWithinParentheses.description": "When a new line is typed, it is aligned under the opening parenthesis or it is indented by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.caseLabels.description": "Labels are indented relative to switch statements by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.caseContents.description": "Code inside case is indented relative to its label by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.caseContentsWhenBlock.description": "Indent braces following a case statement by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.lambdaBracesWhenParameter.description": "Indent braces of lambdas used as function parameters relative to the start of the statement by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.description": "The position of goto labels",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.oneLeft.description": "to the left of the current code indentation, by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.leftmostColumn.description": "at the leftmost edge of the code",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.none.description": "goto labels will not be formatted",
	"c_cpp.configuration.vcFormat.indent.preprocessor.description": "The position of preprocessor directives",
	"c_cpp.configuration.vcFormat.indent.preprocessor.oneLeft.description": "to the left of the current code indentation, by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.preprocessor.leftmostColumn.description": "at the leftmost edge of the code",
	"c_cpp.configuration.vcFormat.indent.preprocessor.none.description": "preprocessor directives will not be formatted",
	"c_cpp.configuration.vcFormat.indent.accessSpecifiers.description": "Access specifiers are indented relative to class or struct definitions by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.namespaceContents.description": "Code is indented relative to its enclosing namespace by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.preserveComment.description": "Отступ комментариев не был изменен во время операций форматирования",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.namespace.description": "The position of opening braces for namespaces",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.type.description": "The position of opening braces for type definitions",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.lambda.description": "The position of opening braces for lambda functions",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.function.description": "The position of opening braces for functions",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.block.description": "The position of opening braces for control blocks",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.newLine.description": "opening braces are moved to a new line",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.sameLine.description": "opening braces are kept on the same line and a space is added before each one",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.ignore.description": "opening braces are not formatted",
	"c_cpp.configuration.vcFormat.newLine.scopeBracesOnSeparateLines.description": "Place opening and closing braces for scopes on separate lines",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyType.description": "Для пустых типов перемещать закрывающую фигурную скобку в ту же строку, где находится открывающая скобка",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyFunction.description": "Для функций с пустым телом перемещать закрывающую фигурную скобку в ту же строку, где находится открывающая скобка",
	"c_cpp.configuration.vcFormat.newLine.beforeCatch.description": "Помещать ключевое слово \"catch\" и аналогичные ключевые слова на новую строку",
	"c_cpp.configuration.vcFormat.newLine.beforeElse.description": "Помещать ключевое слово \"else\" на новую строку",
	"c_cpp.configuration.vcFormat.newLine.beforeWhileInDoWhile.description": "Помещать \"while\" в цикле do-while на новую строку",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.description": "Spacing between function names and opening parentheses of argument lists",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.insert.description": "add a space before the opening parenthesis of a function",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.remove.description": "spaces before opening parenthesis of a function are removed",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.ignore.description": "spaces are left as entered",
	"c_cpp.configuration.vcFormat.space.withinParameterListParentheses.description": "A space is added after the opening parenthesis and also before the closing parenthesis in function parameter lists",
	"c_cpp.configuration.vcFormat.space.betweenEmptyParameterListParentheses.description": "When a function parameter list is empty, a space is inserted between its parentheses",
	"c_cpp.configuration.vcFormat.space.afterKeywordsInControlFlowStatements.description": "A space is added between the keyword and opening parenthesis in control flow statements",
	"c_cpp.configuration.vcFormat.space.withinControlFlowStatementParentheses.description": "A space is added after the opening parenthesis and also before the closing parenthesis in control flow statements",
	"c_cpp.configuration.vcFormat.space.beforeLambdaOpenParenthesis.description": "A space is added before the opening parenthesis of lambda argument lists",
	"c_cpp.configuration.vcFormat.space.withinCastParentheses.description": "A space is added after the opening parenthesis and also before the closing parenthesis of a C-style cast",
	"c_cpp.configuration.vcFormat.space.afterCastCloseParenthesis.description": "A space is added after the closing parenthesis of a C-style cast",
	"c_cpp.configuration.vcFormat.space.withinExpressionParentheses.description": "A space is added after the opening parenthesis and also before the closing parenthesis of a parenthesized expression",
	"c_cpp.configuration.vcFormat.space.beforeBlockOpenBrace.description": "A space is added before the opening braces of scope blocks",
	"c_cpp.configuration.vcFormat.space.betweenEmptyBraces.description": "When braces are empty and on the same line, a space is inserted between them",
	"c_cpp.configuration.vcFormat.space.beforeInitializerListOpenBrace.description": "A space is added before the opening brace of uniform initialization and initializer lists",
	"c_cpp.configuration.vcFormat.space.withinInitializerListBraces.description": "A space is added after the opening brace and also before the closing brace of uniform initialization and initializer lists",
	"c_cpp.configuration.vcFormat.space.preserveInInitializerList.description": "Spaces around commas are preserved insider uniform initialization and initializer lists",
	"c_cpp.configuration.vcFormat.space.beforeOpenSquareBracket.description": "A space is added before opening square brackets",
	"c_cpp.configuration.vcFormat.space.withinSquareBrackets.description": "A space is added after the opening square bracket and also before the closing square bracket",
	"c_cpp.configuration.vcFormat.space.beforeEmptySquareBrackets.description": "When square brackets are empty, a space is added before the opening bracket",
	"c_cpp.configuration.vcFormat.space.betweenEmptySquareBrackets.description": "When square brackets are empty, a space is inserted between them",
	"c_cpp.configuration.vcFormat.space.groupSquareBrackets.description": "For multi-dimensional arrays, all space between brackets is removed. Other settings that control space are overridden",
	"c_cpp.configuration.vcFormat.space.withinLambdaBrackets.description": "A space is added after the opening square bracket and also before the closing square bracket",
	"c_cpp.configuration.vcFormat.space.betweenEmptyLambdaBrackets.description": "When square brackets are empty, a space is inserted between them",
	"c_cpp.configuration.vcFormat.space.beforeComma.description": "A space is added before every comma",
	"c_cpp.configuration.vcFormat.space.afterComma.description": "A space is added after every comma",
	"c_cpp.configuration.vcFormat.space.removeAroundMemberOperators.description": "Spaces around member access operators, pointer-to-member operators, and scope resolution operators are removed",
	"c_cpp.configuration.vcFormat.space.beforeInheritanceColon.description": "A space is added before the colon for inherited types in class definitions",
	"c_cpp.configuration.vcFormat.space.beforeConstructorColon.description": "A space is added before the colon in constructor definitions",
	"c_cpp.configuration.vcFormat.space.removeBeforeSemicolon.description": "Spaces are removed before every semicolon",
	"c_cpp.configuration.vcFormat.space.insertAfterSemicolon.description": "A space is inserted after every semicolon",
	"c_cpp.configuration.vcFormat.space.removeAroundUnaryOperator.description": "Spaces between unary operators and operands are removed",
	"c_cpp.configuration.vcFormat.space.aroundBinaryOperator.description": "Spaces around binary operators",
	"c_cpp.configuration.vcFormat.space.aroundAssignmentOperator.description": "Spaces around assignment operators",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.description": "Spaces around pointer and reference operators",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.left.description": "pointer and reference operators are aligned to the left",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.center.description": "pointer and reference operators are centered",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.right.description": "pointer and reference operators are aligned to the right",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.ignore.description": "pointer and reference operators are not formatted",
	"c_cpp.configuration.vcFormat.space.aroundTernaryOperator.description": "Spaces around conditional operators",
	"c_cpp.configuration.vcFormat.space.aroundOperators.insert.description": "a space is added before the operator and also after it",
	"c_cpp.configuration.vcFormat.space.aroundOperators.remove.description": "spaces before and after the operator are removed",
	"c_cpp.configuration.vcFormat.space.aroundOperators.ignore.description": "spaces are left as entered",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.description": "Параметры переноса по блокам",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.oneLiners.description": "a complete code block that is entered on one line is kept on one line, regardless of the values of any of the VC Format: New Line settings",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.allOneLineScopes.description": "any code where the opening and closing brace is entered on one line is kept on one line, regardless of the values of any of the VC Format: New Line settings",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.never.description": "code blocks are always formatted based on the values of the VC Format: New Line settings",
	"c_cpp.configuration.clang_format_path.description": "Полный путь к исполняемому файлу clang-format. Если значение не указано, а clang-format доступен в пути среды, то используется clang-format. Если clang-format не найден в пути среды, будет использоваться копия clang-format, поддерживаемая расширением.",
	"c_cpp.configuration.clang_format_style.description": "Coding style, currently supports: file, LLVM, Google, Chromium, Mozilla, WebKit, Emulated Visual Studio, and Visual Studio. Use \"file\" to load the style from a .clang-format file in the current or parent directory. When \"Visual Studio\" is used, the Visual C++ formatting engine will be invoked instead of clang-format. \"Emulated Visual Studio\" will generate a set of Visual Studio-like formatting options for clang-format. Use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All }",
	"c_cpp.configuration.clang_format_fallbackStyle.description": "Name of the predefined style used as a fallback in case clang-format is invoked with style \"file\" but the .clang-format file is not found. In addition to the values supported by clang_format_style, you may also specify \"none\" to select no fallback style.",
	"c_cpp.configuration.clang_format_sortIncludes.description": "Если параметр задан, он переопределяет поведение сортировки включения, определяемое параметром SortIncludes.",
	"c_cpp.configuration.intelliSenseEngine.description": "Управляет поставщиком IntelliSense. Значение \"Анализатор тегов\" дает нечеткие результаты, не учитывающие контекст. Значение \"По умолчанию\" дает результаты с учетом контекста. Значение \"Отключено\" выключает компоненты языковой службы C/C++.",
	"c_cpp.configuration.intelliSenseEngineFallback.description": "Определяет, будет ли подсистема IntelliSense автоматически переключаться на анализатор тегов для единиц трансляции, содержащих ошибки #include.",
	"c_cpp.configuration.autocomplete.description": "Управляет поставщиком автозаполнения. При значении Default (По умолчанию) используется активная подсистема IntelliSense. При значении Disabled (Отключено) используется завершение на основе слов, предоставляемое Visual Studio Code.",
	"c_cpp.configuration.errorSquiggles.description": "Определяет, будут ли возможные ошибки компиляции, обнаруживаемые подсистемой IntelliSense, выводиться в редакторе. Этот параметр игнорируется подсистемой анализатора тегов.",
	"c_cpp.configuration.dimInactiveRegions.description": "Определяет, окрашены ли неактивные блоки препроцессора иначе, чем активный код. Этот параметр не работает, если функция IntelliSense отключена или используется тема с высокой контрастностью по умолчанию.",
	"c_cpp.configuration.inactiveRegionOpacity.description": "Управляет непрозрачностью неактивных блоков препроцессора. Масштабируется в диапазоне от 0,1 до 1,0. Этот параметр применяется только при включенном затенении неактивной области.",
	"c_cpp.configuration.inactiveRegionForegroundColor.description": "Управляет цветом шрифта для неактивных блоков препроцессора. Входные данные имеют форму шестнадцатеричного кода цвета или допустимого цвета темы. Если значение не задано, по умолчанию используется схема раскраски синтаксических конструкций из редактора. Этот параметр применяется только при включенном затенении неактивной области.",
	"c_cpp.configuration.inactiveRegionBackgroundColor.description": "Управляет цветом фона для неактивных блоков препроцессора. Входные данные имеют форму шестнадцатеричного кода цвета или допустимого цвета темы. Если значение не задано, по умолчанию используется прозрачное отображение. Этот параметр применяется только при включенном затенении неактивной области.",
	"c_cpp.configuration.loggingLevel.description": "Уровень детализации для журнала на панели вывода. Порядок уровней от наименее подробных к наиболее подробным: None < Error < Warning < Information < Debug.",
	"c_cpp.configuration.autoAddFileAssociations.description": "Определяет, будут ли файлы автоматически добавляться в files.associations, если они являются целью операции навигации из файла C/C++.",
	"c_cpp.configuration.workspaceParsingPriority.description": "Определяет, используется ли спящий режим при анализе неактивных файлов рабочей области, чтобы избежать 100-процентной загрузки ЦП. Значения \"highest/high/medium/low\" соответствуют приблизительно 100/75/50/25-процентной загрузке ЦП.",
	"c_cpp.configuration.workspaceSymbols.description": "Символы, включаемые в результаты запроса при вызове функции \"Перейти к символу в рабочей области\"",
	"c_cpp.configuration.exclusionPolicy.description": "Предписывает расширению использовать параметр \"files.exclude\" при определении того, какие файлы нужно добавить в базу данных навигации по коду при обходе путей в массиве \"browse.path\". \"checkFolders\" означает, что фильтры исключения будут вычисляться только один раз для папки (отдельные файлы не проверяются). \"checkFilesAndFolders\" означает, что фильтры исключения будут вычисляться для отдельных найденных файлов и папок. Если параметр \"files.exclude\" содержит только папки, то вариант \"checkFolders\" подходит лучше всего и увеличивает скорость, с которой расширение может инициализировать базу данных навигации по коду.",
	"c_cpp.configuration.preferredPathSeparator.description": "Символ, используемый в качестве разделителя пути для результатов автозавершения #include.",
	"c_cpp.configuration.simplifyStructuredComments.description": "If true, tooltips of hover and auto-complete will only display certain labels of structured comments. Otherwise, all comments are displayed.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.string.description": "Шаблон, который начинается с многострочного или однострочного примечания. Шаблон продолжения по умолчанию имеет значение \" * \" для многострочных примечаний или соответствует этой строке для однострочных примечаний.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.begin.description": "Шаблон, который начинается с многострочного или однострочного примечания.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.continue.description": "Текст, который будет вставлен в следующую строку при нажатии клавиши ВВОД в многострочном или однострочном примечании.",
	"c_cpp.configuration.commentContinuationPatterns.description": "Определяет поведение редактора при нажатии клавиши ВВОД внутри многострочного или однострочного примечания.",
	"c_cpp.configuration.configurationWarnings.description": "Определяет, будут ли отображаться всплывающие уведомления, если расширение поставщика конфигурации не может предоставить конфигурацию для исходного файла.",
	"c_cpp.configuration.intelliSenseCachePath.description": "Определяет путь к папке для кэшированных предварительно скомпилированных заголовков, используемых IntelliSense. Путь к кэшу по умолчанию: \"%LocalAppData%/Microsoft/vscode-cpptools\" в Windows, \"$XDG_CACHE_HOME/vscode-cpptools/\" в Linux (или \"$HOME/.cache/vscode-cpptools/\", если переменная среды XDG_CACHE_HOME не определена) и \"$HOME/Library/Caches/vscode-cpptools/\" в Mac. Если путь не указан или не является допустимым, используется путь по умолчанию.",
	"c_cpp.configuration.intelliSenseCacheSize.description": "Максимальный размер (в мегабайтах) пространства на жестком диске для каждой рабочей области, предназначенный для кэшированных предкомпилированных заголовков; фактическое использование может колебаться в районе этого значения. Размер по умолчанию — 5120 МБ. Кэширование предкомпилированных заголовков отключено, если размер равен 0.",
	"c_cpp.configuration.default.includePath.description": "The value to use in a configuration if \"includePath\" is not specified in c_cpp_properties.json. If \"includePath\" is specified, add \"${default}\" to the array to insert the values from this setting.",
	"c_cpp.configuration.default.defines.description": "Значение, используемое в конфигурации, если параметр \"defines\" не указан, или вставляемые значения, если в \"defines\" присутствует значение \"${default}\".",
	"c_cpp.configuration.default.macFrameworkPath.description": "Значение, используемое в конфигурации, если параметр \"macFrameworkPath\" не указан, или вставляемые значения, если в \"macFrameworkPath\" присутствует значение \"${default}\".",
	"c_cpp.configuration.default.windowsSdkVersion.description": "Версия пути включения Windows SDK для использования в Windows, например \"10.0.17134.0\".",
	"c_cpp.configuration.default.compileCommands.description": "Значение, используемое в конфигурации, если параметр \"compileCommands\" не указан или имеет значение \"${default}\".",
	"c_cpp.configuration.default.forcedInclude.description": "Значение, используемое в конфигурации, если параметр \"forcedInclude\" не указан, или вставляемые значения, если в \"forcedInclude\" присутствует значение \"${default}\".",
	"c_cpp.configuration.default.intelliSenseMode.description": "Значение, используемое в конфигурации, если параметр \"intelliSenseMode\" не указан или имеет значение \"${default}\".",
	"c_cpp.configuration.default.compilerPath.description": "Значение, используемое в конфигурации, если параметр \"compilerPath\" не указан или имеет значение \"${default}\".",
	"c_cpp.configuration.default.compilerArgs.description": "Значение, используемое в конфигурации, если параметр \"compilerArgs\" не указан или имеет значение \"${default}\".",
	"c_cpp.configuration.default.cStandard.description": "Значение, используемое в конфигурации, если параметр \"cStandard\" не указан или имеет значение \"${default}\".",
	"c_cpp.configuration.default.cppStandard.description": "Значение, используемое в конфигурации, если параметр \"cppStandard\" не указан или имеет значение \"${default}\".",
	"c_cpp.configuration.default.configurationProvider.description": "Значение, используемое в конфигурации, если параметр \"configurationProvider\" не указан или имеет значение \"${default}\".",
	"c_cpp.configuration.default.browse.path.description": "Значение, используемое в конфигурации, если параметр \"browse.path\" не указан, или вставляемые значения, если в \"browse.path\" присутствует значение \"${default}\".",
	"c_cpp.configuration.default.browse.databaseFilename.description": "Значение, используемое в конфигурации, если параметр \"browse.databaseFilename\" не указан или имеет значение \"${default}\".",
	"c_cpp.configuration.default.browse.limitSymbolsToIncludedHeaders.description": "Значение, используемое в конфигурации, если параметр \"browse.limitSymbolsToIncludedHeaders\" не указан или имеет значение \"${default}\".",
	"c_cpp.configuration.default.systemIncludePath.description": "Значение, используемое для системного пути включения. Если этот параметр задан, он переопределяет системный путь включения, полученный с помощью параметров \"compilerPath\" и \"compileCommands\".",
	"c_cpp.configuration.default.enableConfigurationSquiggles.description": "Определяет, будет ли расширение сообщать об ошибках, обнаруженных в c_cpp_properties.json.",
	"c_cpp.configuration.default.customConfigurationVariables.description": "Значение, используемое в конфигурации, если параметр \"customConfigurationVariables\" не установлен, или вставляемые значения, если в \"customConfigurationVariables\" присутствует значение \"${default}\" в качестве ключа.",
	"c_cpp.configuration.updateChannel.description": "Укажите значение \"Участники программы предварительной оценки\", чтобы автоматически скачать и установить последние сборки программы предварительной оценки, включающие в себя запланированные функции и исправления ошибок.",
	"c_cpp.configuration.experimentalFeatures.description": "Определяет, можно ли использовать \"экспериментальные\" функции.",
	"c_cpp.configuration.suggestSnippets.description": "Если задано значение true, фрагменты кода предоставляются языковым сервером.",
	"c_cpp.configuration.enhancedColorization.description": "If enabled, code is colorized based on IntelliSense. This setting only applies if intelliSenseEngine is set to \"Default\".",
	"c_cpp.configuration.codeFolding.description": "Если этот параметр включен, то диапазоны свертывания кода предоставляются языковым сервером.",
	"c_cpp.configuration.vcpkg.enabled.markdownDescription": "Включите службы интеграции для [диспетчера зависимостей vcpkg](https://aka.ms/vcpkg/).",
	"c_cpp.configuration.renameRequiresIdentifier.description": "Если этот параметр имеет значение true, для операции \"Переименование символов\" потребуется указать допустимый идентификатор C/C++.",
	"c_cpp.configuration.debugger.useBacktickCommandSubstitution.description": "Если задано значение true, для подстановки команд оболочки отладчика будет использоваться устаревший обратный апостроф (`)",
	"c_cpp.contributes.views.cppReferencesView.title": "C/C++: результаты по другим ссылкам",
	"c_cpp.debuggers.pipeTransport.description": "При наличии сообщает отладчику о необходимости подключения к удаленному компьютеру с помощью другого исполняемого файла в качестве канала, который будет пересылать стандартный ввод и вывод между VS Code и исполняемым файлом отладчика с поддержкой MI в серверной части (например, gdb).",
	"c_cpp.debuggers.pipeTransport.default.pipeProgram": "Введите полный путь к имени программы канала, например: \"/usr/bin/ssh\"",
	"c_cpp.debuggers.pipeTransport.default.debuggerPath": "Полный путь к отладчику на конечном компьютере, например: /usr/bin/gdb.",
	"c_cpp.debuggers.pipeTransport.debuggerPath.description": "Полный путь к отладчику на конечном компьютере, например: /usr/bin/gdb.",
	"c_cpp.debuggers.pipeTransport.pipeCwd.description": "Полный путь к рабочему каталогу для программы канала.",
	"c_cpp.debuggers.pipeTransport.pipeProgram.description": "Полная команда канала для выполнения.",
	"c_cpp.debuggers.pipeTransport.pipeArgs.description": "Аргументы командной строки, переданные в программу канала для настройки подключения.",
	"c_cpp.debuggers.pipeTransport.pipeEnv.description": "Переменные среды, переданные в программу канала.",
	"c_cpp.debuggers.pipeTransport.quoteArgs.description": "Определяет, должны ли быть заключены в кавычки отдельные аргументы pipeProgram, если эти аргументы содержат символы (такие как пробелы или символы табуляции). Если задано значение \"false\", команда отладчика больше не будет автоматически заключаться в кавычки. \nЗначение по умолчанию — \"true\".",
	"c_cpp.debuggers.logging.description": "Необязательные флаги для определения типов сообщений, регистрируемых в консоли отладки.",
	"c_cpp.debuggers.logging.exceptions.description": "Необязательный флаг, определяющий, следует ли регистрировать сообщения об исключениях в консоли отладки. По умолчанию принимает значение true.",
	"c_cpp.debuggers.logging.moduleLoad.description": "Необязательный флаг, определяющий, следует ли регистрировать события загрузки модулей в консоли отладки. По умолчанию принимает значение true.",
	"c_cpp.debuggers.logging.programOutput.description": "Необязательный флаг, определяющий, следует ли регистрировать выходные данные программы в консоли отладки. По умолчанию принимает значение true.",
	"c_cpp.debuggers.logging.engineLogging.description": "Необязательный флаг, определяющий, следует ли регистрировать сообщения диагностического модуля отладки в консоли отладки. По умолчанию принимает значение false.",
	"c_cpp.debuggers.logging.trace.description": "Необязательный флаг, определяющий, следует ли регистрировать трассировку команд диагностического адаптера в консоли отладки. По умолчанию принимает значение false.",
	"c_cpp.debuggers.logging.traceResponse.description": "Необязательный флаг, определяющий, следует ли регистрировать трассировку команд и ответов диагностического адаптера в консоли отладки. По умолчанию принимает значение false.",
	"c_cpp.debuggers.cppvsdbg.logging.threadExit.description": "Необязательный флаг, определяющий, следует ли записывать сообщения о выходе для потоков в консоль отладки. Значение по умолчанию: \"false\".",
	"c_cpp.debuggers.cppvsdbg.logging.processExit.description": "Необязательный флаг, определяющий, следует ли записывать сообщения о выходе для целевого процесса в консоль отладки или останавливать отладку. Значение по умолчанию: \"true\".",
	"c_cpp.debuggers.text.description": "Команда отладчика для выполнения.",
	"c_cpp.debuggers.description.description": "Необязательное описание команды.",
	"c_cpp.debuggers.ignoreFailures.description": "Если задано значение true, сбои этой команды должны игнорироваться. Значение по умолчанию — false.",
	"c_cpp.debuggers.program.description": "Полный путь к исполняемому файлу программы.",
	"c_cpp.debuggers.args.description": "Аргументы командной строки, переданные в программу.",
	"c_cpp.debuggers.cppdbg.type.description": "Тип подсистемы. Должно быть \"cppdbg\".",
	"c_cpp.debuggers.cppvsdbg.type.description": "Тип подсистемы. Должно быть \"cppvsdbg\".",
	"c_cpp.debuggers.targetArchitecture.description": "Архитектура отлаживаемого объекта. Будет определяться автоматически, если этот параметр не задан. Допустимые значения: x86, arm, arm64, mips, x64, amd64, x86_64.",
	"c_cpp.debuggers.cwd.description": "Рабочий каталог целевой программы",
	"c_cpp.debuggers.setupCommands.description": "Одна или несколько команд GDB/LLDB, выполняемых для настройки базового отладчика. Пример: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].",
	"c_cpp.debuggers.customLaunchSetupCommands.description": "Если этот параметр задан, он заменяет команды по умолчанию, используемые для запуска целевого объекта, некоторыми другими командами. Например, это может быть \"-target-attach\" для подключения к целевому процессу. Если указать пустой список команд для замены команд запуска, никакие команды выполняться не будут, что может быть удобно в случаях, когда параметры запуска предоставляются отладчику как параметры командной строки. Пример: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].",
	"c_cpp.debuggers.launchCompleteCommand.description": "Команда, выполняемая после полной настройки отладчика для запуска целевого процесса. Допустимые значения: \"exec-run\", \"exec-continue\", \"None\". Значение по умолчанию: \"exec-run\".",
	"c_cpp.debuggers.cppdbg.visualizerFile.description": "Файл NATVIS, используемый при отладке этого процесса. Этот параметр несовместим с автоматическим форматированием GDB. Если этот параметр используется, см. также описание \"showDisplayString\".",
	"c_cpp.debuggers.cppvsdbg.visualizerFile.description": "Файл NATVIS, используемый при отладке этого процесса.",
	"c_cpp.debuggers.showDisplayString.description": "Если указано значение visualizerFile, showDisplayString включит отображаемую строку. Включение этого параметра может привести к снижению производительности во время отладки.",
	"c_cpp.debuggers.environment.description": "Переменные среды для добавления в среду для программы. Пример: [ { \"name\": \"squid\", \"value\": \"clam\" } ].",
	"c_cpp.debuggers.envFile.description": "Абсолютный путь к файлу, содержащему определения переменных среды. Этот файл содержит пары \"ключ-значение\", разделенные знаком равенства и разнесенные по строкам. Например, \"ключ=значение\"",
	"c_cpp.debuggers.additionalSOLibSearchPath.description": "Список каталогов, разделенных точкой с запятой, который следует использовать для поиска файлов SO. Пример: \"c:\\каталог_1;c:\\каталог_2\".",
	"c_cpp.debuggers.MIMode.description": "Указывает отладчик консоли, к которому подключится MIDebugEngine. Допустимые значения: \"gdb\" \"lldb\".",
	"c_cpp.debuggers.miDebuggerPath.description": "Путь к отладчику MI (например, GDB). Если он не задан, сначала будет выполнен поиск пути для отладчика.",
	"c_cpp.debuggers.miDebuggerArgs.description": "Дополнительные аргументы для отладчика MI (например, GDB).",
	"c_cpp.debuggers.miDebuggerServerAddress.description": "Сетевой адрес сервера отладчика MI, к которому требуется подключиться (пример: localhost:1234).",
	"c_cpp.debuggers.stopAtEntry.description": "Необязательный параметр. Если задано значение true, отладчик должен остановиться на точке входа целевого объекта. Если передается идентификатор процесса (processId), он не оказывает никакого влияния.",
	"c_cpp.debuggers.debugServerPath.description": "Необязательный полный путь к серверу отладки для запуска. Значение по умолчанию: null.",
	"c_cpp.debuggers.debugServerArgs.description": "Необязательные аргументы сервера отладки. Значение по умолчанию: null.",
	"c_cpp.debuggers.serverStarted.description": "Дополнительный запускаемый сервером шаблон для поиска в выходных данных сервера отладки. Значение по умолчанию: null.",
	"c_cpp.debuggers.filterStdout.description": "Поиск запущенного сервером шаблона в потоке stdout и регистрация stdout в выходных данных отладки. Значение по умолчанию: true.",
	"c_cpp.debuggers.filterStderr.description": "Поиск запущенного сервером шаблона в потоке stderr и регистрация stderr в выходных данных отладки. Значение по умолчанию: false.",
	"c_cpp.debuggers.serverLaunchTimeout.description": "Необязательный период (в миллисекундах), в течение которого отладчик будет ожидать запуска debugServer. Значение по умолчанию: 10000.",
	"c_cpp.debuggers.coreDumpPath.description": "Необязательный полный путь к основному файлу дампа для указанной программы. Значение по умолчанию: null.",
	"c_cpp.debuggers.cppdbg.externalConsole.description": "Если задано значение true, для отлаживаемого объекта запускается консоль. Если задано значение false, в Linux и Windows он отображается в интегрированной консоли.",
	"c_cpp.debuggers.cppvsdbg.externalConsole.description": "Если задано значение true, для отлаживаемого объекта запускается консоль. Если задано значение false, консоль не запускается.",
	"c_cpp.debuggers.avoidWindowsConsoleRedirection.description": "Если задано значение true, отключается перенаправление консоли отлаживаемого объекта, необходимое для поддержки встроенного терминала.",
	"c_cpp.debuggers.sourceFileMap.description": "Необязательные сопоставления исходного файла, переданные в подсистему отладки. Пример: \"{ \"/original/source/path\":\"/current/source/path\" }\"",
	"c_cpp.debuggers.processId.anyOf.description": "Необязательный идентификатор процесса, к которому требуется подключить отладчик. Используйте \"${command:pickProcess}\", чтобы получить список локальных запущенных процессов для подключения. Обратите внимание, что для подключения к процессу на некоторых платформах требуются права администратора.",
	"c_cpp.debuggers.symbolSearchPath.description": "Список каталогов, разделенных точкой с запятой, который следует использовать для поиска файлов символов (таких как PDB). Пример: \"c:\\каталог_1;c:\\каталог_2\".",
	"c_cpp.debuggers.dumpPath.description": "Необязательный полный путь к основному файлу дампа для указанной программы. Пример: \"c:\\temp\\app.dmp\". Значение по умолчанию: null.",
	"c_cpp.debuggers.enableDebugHeap.description": "Если задано значение false, процесс будет запущен с отключенной кучей отладки. При этом для переменной среды \"_NO_DEBUG_HEAP\" устанавливается значение \"1\".",
	"c_cpp.debuggers.symbolLoadInfo.description": "Явный контроль загрузки символов.",
	"c_cpp.debuggers.symbolLoadInfo.loadAll.description": "При значении true (истина) будут загружаться символы для всех библиотек. В противном случае символы общих библиотек (solib) загружаться не будут. По умолчанию: true.",
	"c_cpp.debuggers.symbolLoadInfo.exceptionList.description": "Список имен файлов (допустимы подстановочные знаки), разделенных точкой с запятой (\";\") изменяет работу LoadAll. Если LoadAll имеет значение true (истина), то для библиотек, имя которых соответствует какому-либо имени в списке, символы загружаться не будут. В противном случае символы будут загружаться только для библиотек с именами из списка. Пример: \"foo.so;bar.so\".",
	"c_cpp.debuggers.requireExactSource.description": "Необязательный флаг, требующий соответствия текущего исходного кода PDB-файлу."
}