/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"c_cpp.command.configurationSelect.title": "Vybrat konfiguraci...",
	"c_cpp.command.configurationProviderSelect.title": "Změnit poskytovatele konfigurací...",
	"c_cpp.command.configurationEditJSON.title": "Upravit konfigurace (JSON)",
	"c_cpp.command.configurationEditUI.title": "Upravit konfigurace (uživatelské rozhraní)",
	"c_cpp.command.switchHeaderSource.title": "Přepnout hlavičku/zdroj",
	"c_cpp.command.enableErrorSquiggles.title": "Povolit podtrhávání chyb vlnovkou",
	"c_cpp.command.disableErrorSquiggles.title": "Zakázat podtrhávání chyb vlnovkou",
	"c_cpp.command.toggleIncludeFallback.title": "Přepnout na zálohu modulu IntelliSense, když dojde k chybám vložených souborů",
	"c_cpp.command.toggleDimInactiveRegions.title": "Přepnout barvení neaktivních oblastí",
	"c_cpp.command.resetDatabase.title": "Resetovat databázi IntelliSense",
	"c_cpp.command.takeSurvey.title": "Vyplnit průzkum",
	"c_cpp.command.buildAndDebugActiveFile.title": "Sestavit a ladit aktivní soubor",
	"c_cpp.command.logDiagnostics.title": "Protokolovat diagnostiku",
	"c_cpp.command.referencesViewGroupByType.title": "Seskupit podle typu odkazu",
	"c_cpp.command.referencesViewUngroupByType.title": "Oddělit podle typu odkazu",
	"c_cpp.command.rescanWorkspace.title": "Znovu prohledat pracovní prostor",
	"c_cpp.command.vcpkgClipboardInstallSuggested.title": "Zkopírovat příkaz pro instalaci vcpkg do schránky",
	"c_cpp.command.vcpkgOnlineHelpSuggested.title": "Navštívit stránku nápovědy k vcpkg",
	"c_cpp.configuration.formatting.description": "Configures the formatting engine",
	"c_cpp.configuration.formatting.clangFormat.description": "clang-format will be used to format code",
	"c_cpp.configuration.formatting.vcFormat.description": "The Visual C++ formatting engine will be used to format code",
	"c_cpp.configuration.formatting.Default.description": "clang-format will be used to format code",
	"c_cpp.configuration.formatting.Disabled.description": "Code formatting will be disabled",
	"c_cpp.configuration.vcFormat.indent.braces.description": "Braces are indented by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.description": "When a new line is typed, indent the new line relatively to:",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.outermostParenthesis.description": "the outermost open parenthesis",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.innermostParenthesis.description": "the innermost open parenthesis",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.statementBegin.description": "the beginning of the current statement",
	"c_cpp.configuration.vcFormat.indent.preserveIndentationWithinParentheses.description": "When a new line is typed, it is aligned under the opening parenthesis or it is indented by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.caseLabels.description": "Labels are indented relative to switch statements by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.caseContents.description": "Code inside case is indented relative to its label by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.caseContentsWhenBlock.description": "Indent braces following a case statement by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.lambdaBracesWhenParameter.description": "Indent braces of lambdas used as function parameters relative to the start of the statement by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.description": "The position of goto labels",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.oneLeft.description": "to the left of the current code indentation, by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.leftmostColumn.description": "at the leftmost edge of the code",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.none.description": "goto labels will not be formatted",
	"c_cpp.configuration.vcFormat.indent.preprocessor.description": "The position of preprocessor directives",
	"c_cpp.configuration.vcFormat.indent.preprocessor.oneLeft.description": "to the left of the current code indentation, by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.preprocessor.leftmostColumn.description": "at the leftmost edge of the code",
	"c_cpp.configuration.vcFormat.indent.preprocessor.none.description": "preprocessor directives will not be formatted",
	"c_cpp.configuration.vcFormat.indent.accessSpecifiers.description": "Access specifiers are indented relative to class or struct definitions by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.namespaceContents.description": "Code is indented relative to its enclosing namespace by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.preserveComment.description": "Při formátovacích operacích se nezmění odsazení komentářů.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.namespace.description": "The position of opening braces for namespaces",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.type.description": "The position of opening braces for type definitions",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.lambda.description": "The position of opening braces for lambda functions",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.function.description": "The position of opening braces for functions",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.block.description": "The position of opening braces for control blocks",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.newLine.description": "opening braces are moved to a new line",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.sameLine.description": "opening braces are kept on the same line and a space is added before each one",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.ignore.description": "opening braces are not formatted",
	"c_cpp.configuration.vcFormat.newLine.scopeBracesOnSeparateLines.description": "Place opening and closing braces for scopes on separate lines",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyType.description": "V případě prázdných typů přesunout pravou složenou závorku na řádek, na kterém je levá složená závorka",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyFunction.description": "V případě prázdných těl funkcí nout pravou závorku na řádek, na kterém je levá závorka",
	"c_cpp.configuration.vcFormat.newLine.beforeCatch.description": "Umísťovat catch a podobná klíčová slova na nový řádek",
	"c_cpp.configuration.vcFormat.newLine.beforeElse.description": "Umístit else na nový řádek",
	"c_cpp.configuration.vcFormat.newLine.beforeWhileInDoWhile.description": "Umístit while ve smyčce do-while na nový řádek",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.description": "Spacing between function names and opening parentheses of argument lists",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.insert.description": "add a space before the opening parenthesis of a function",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.remove.description": "spaces before opening parenthesis of a function are removed",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.ignore.description": "spaces are left as entered",
	"c_cpp.configuration.vcFormat.space.withinParameterListParentheses.description": "A space is added after the opening parenthesis and also before the closing parenthesis in function parameter lists",
	"c_cpp.configuration.vcFormat.space.betweenEmptyParameterListParentheses.description": "When a function parameter list is empty, a space is inserted between its parentheses",
	"c_cpp.configuration.vcFormat.space.afterKeywordsInControlFlowStatements.description": "A space is added between the keyword and opening parenthesis in control flow statements",
	"c_cpp.configuration.vcFormat.space.withinControlFlowStatementParentheses.description": "A space is added after the opening parenthesis and also before the closing parenthesis in control flow statements",
	"c_cpp.configuration.vcFormat.space.beforeLambdaOpenParenthesis.description": "A space is added before the opening parenthesis of lambda argument lists",
	"c_cpp.configuration.vcFormat.space.withinCastParentheses.description": "A space is added after the opening parenthesis and also before the closing parenthesis of a C-style cast",
	"c_cpp.configuration.vcFormat.space.afterCastCloseParenthesis.description": "A space is added after the closing parenthesis of a C-style cast",
	"c_cpp.configuration.vcFormat.space.withinExpressionParentheses.description": "A space is added after the opening parenthesis and also before the closing parenthesis of a parenthesized expression",
	"c_cpp.configuration.vcFormat.space.beforeBlockOpenBrace.description": "A space is added before the opening braces of scope blocks",
	"c_cpp.configuration.vcFormat.space.betweenEmptyBraces.description": "When braces are empty and on the same line, a space is inserted between them",
	"c_cpp.configuration.vcFormat.space.beforeInitializerListOpenBrace.description": "A space is added before the opening brace of uniform initialization and initializer lists",
	"c_cpp.configuration.vcFormat.space.withinInitializerListBraces.description": "A space is added after the opening brace and also before the closing brace of uniform initialization and initializer lists",
	"c_cpp.configuration.vcFormat.space.preserveInInitializerList.description": "Spaces around commas are preserved insider uniform initialization and initializer lists",
	"c_cpp.configuration.vcFormat.space.beforeOpenSquareBracket.description": "A space is added before opening square brackets",
	"c_cpp.configuration.vcFormat.space.withinSquareBrackets.description": "A space is added after the opening square bracket and also before the closing square bracket",
	"c_cpp.configuration.vcFormat.space.beforeEmptySquareBrackets.description": "When square brackets are empty, a space is added before the opening bracket",
	"c_cpp.configuration.vcFormat.space.betweenEmptySquareBrackets.description": "When square brackets are empty, a space is inserted between them",
	"c_cpp.configuration.vcFormat.space.groupSquareBrackets.description": "For multi-dimensional arrays, all space between brackets is removed. Other settings that control space are overridden",
	"c_cpp.configuration.vcFormat.space.withinLambdaBrackets.description": "A space is added after the opening square bracket and also before the closing square bracket",
	"c_cpp.configuration.vcFormat.space.betweenEmptyLambdaBrackets.description": "When square brackets are empty, a space is inserted between them",
	"c_cpp.configuration.vcFormat.space.beforeComma.description": "A space is added before every comma",
	"c_cpp.configuration.vcFormat.space.afterComma.description": "A space is added after every comma",
	"c_cpp.configuration.vcFormat.space.removeAroundMemberOperators.description": "Spaces around member access operators, pointer-to-member operators, and scope resolution operators are removed",
	"c_cpp.configuration.vcFormat.space.beforeInheritanceColon.description": "A space is added before the colon for inherited types in class definitions",
	"c_cpp.configuration.vcFormat.space.beforeConstructorColon.description": "A space is added before the colon in constructor definitions",
	"c_cpp.configuration.vcFormat.space.removeBeforeSemicolon.description": "Spaces are removed before every semicolon",
	"c_cpp.configuration.vcFormat.space.insertAfterSemicolon.description": "A space is inserted after every semicolon",
	"c_cpp.configuration.vcFormat.space.removeAroundUnaryOperator.description": "Spaces between unary operators and operands are removed",
	"c_cpp.configuration.vcFormat.space.aroundBinaryOperator.description": "Spaces around binary operators",
	"c_cpp.configuration.vcFormat.space.aroundAssignmentOperator.description": "Spaces around assignment operators",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.description": "Spaces around pointer and reference operators",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.left.description": "pointer and reference operators are aligned to the left",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.center.description": "pointer and reference operators are centered",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.right.description": "pointer and reference operators are aligned to the right",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.ignore.description": "pointer and reference operators are not formatted",
	"c_cpp.configuration.vcFormat.space.aroundTernaryOperator.description": "Spaces around conditional operators",
	"c_cpp.configuration.vcFormat.space.aroundOperators.insert.description": "a space is added before the operator and also after it",
	"c_cpp.configuration.vcFormat.space.aroundOperators.remove.description": "spaces before and after the operator are removed",
	"c_cpp.configuration.vcFormat.space.aroundOperators.ignore.description": "spaces are left as entered",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.description": "Možnosti zalamování pro bloky",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.oneLiners.description": "a complete code block that is entered on one line is kept on one line, regardless of the values of any of the VC Format: New Line settings",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.allOneLineScopes.description": "any code where the opening and closing brace is entered on one line is kept on one line, regardless of the values of any of the VC Format: New Line settings",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.never.description": "code blocks are always formatted based on the values of the VC Format: New Line settings",
	"c_cpp.configuration.clang_format_path.description": "Úplná cesta ke spustitelnému souboru clang-format. Pokud se nezadá, clang-format je k dispozici na cestě prostředí a ta se použije. Pokud se na cestě prostředí nenajde, použije se kopie clang-format, která se dodává spolu s rozšířením.",
	"c_cpp.configuration.clang_format_style.description": "Coding style, currently supports: file, LLVM, Google, Chromium, Mozilla, WebKit, Emulated Visual Studio, and Visual Studio. Use \"file\" to load the style from a .clang-format file in the current or parent directory. When \"Visual Studio\" is used, the Visual C++ formatting engine will be invoked instead of clang-format. \"Emulated Visual Studio\" will generate a set of Visual Studio-like formatting options for clang-format. Use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All }",
	"c_cpp.configuration.clang_format_fallbackStyle.description": "Name of the predefined style used as a fallback in case clang-format is invoked with style \"file\" but the .clang-format file is not found. In addition to the values supported by clang_format_style, you may also specify \"none\" to select no fallback style.",
	"c_cpp.configuration.clang_format_sortIncludes.description": "Pokud se nastaví, přepíše chování řazení vložených souborů určené parametrem SortIncludes.",
	"c_cpp.configuration.intelliSenseEngine.description": "Určuje poskytovatele IntelliSense. Analyzátor značek nabízí přibližné výsledky, které neberou v potaz kontext. Možnost Výchozí nabízí výsledky, které kontext v potaz berou. Možnost Zakázáno vypne funkce služby jazyka C/C++.",
	"c_cpp.configuration.intelliSenseEngineFallback.description": "Určuje, jestli se modul IntelliSense automaticky přepne na analyzátor značek pro jednotky překladu, které obsahují chyby direktiv #include.",
	"c_cpp.configuration.autocomplete.description": "Určuje poskytovatele automatického dokončení. Možnost Default používá aktivní modul IntelliSense. Možnost Disabled používá dokončování podle slov, které nabízí Visual Studio Code.",
	"c_cpp.configuration.errorSquiggles.description": "Určuje, jestli se editoru budou hlásit podezření na chyby kompilace, které zjistí modul IntelliSense. Modul analyzátoru značek toto nastavení ignoruje.",
	"c_cpp.configuration.dimInactiveRegions.description": "Určuje, jestli se neaktivní bloky preprocesoru zabarví jinak než aktivní kód. Toto nastavení nemá žádný vliv, pokud se zakáže IntelliSense nebo pokud se použije výchozí motiv Vysoký kontrast.",
	"c_cpp.configuration.inactiveRegionOpacity.description": "Určuje neprůhlednost neaktivních bloků preprocesoru. Hodnoty spadají do rozsahu od 0,1 do 1,0. Toto nastavení platí jen v případě, že je povolené ztmavování neaktivních oblastí.",
	"c_cpp.configuration.inactiveRegionForegroundColor.description": "Určuje barvení písma neaktivních bloků preprocesoru. Vstup má tvar šestnáctkového kódu barvy nebo platné barvy motivu. Pokud se nenastaví, výchozí nastavení je schéma barvení syntaxe v editoru. Toto nastavení platí jen v případě, že je povolené ztmavování neaktivních oblastí.",
	"c_cpp.configuration.inactiveRegionBackgroundColor.description": "Určuje barvení pozadí neaktivních bloků preprocesoru. Vstup má tvar šestnáctkového kódu barvy nebo platné barvy motivu. Pokud se nenastaví, výchozí nastavení je průhledné pozadí. Toto nastavení platí jen v případě, že je povolené ztmavování neaktivních oblastí.",
	"c_cpp.configuration.loggingLevel.description": "Úroveň podrobností protokolování panelu výstupu. Pořadí úrovní od nejméně podrobné po nejpodrobnější je toto: None < Error < Warning < Information < Debug.",
	"c_cpp.configuration.autoAddFileAssociations.description": "Určuje, jestli se soubory automaticky přidají do files.associations, když budou cílem operace navigace ze souboru C/C++.",
	"c_cpp.configuration.workspaceParsingPriority.description": "Určuje, jestli parsování neaktivních souborů pracovního prostoru použije operace čekání, aby se procesor nevyužíval na 100 %. Hodnoty highest/high/medium/low odpovídají přibližně 100/75/50/25 % využití procesoru.",
	"c_cpp.configuration.workspaceSymbols.description": "Symboly, které se mají zahrnout do výsledků dotazů, když se zavolá operace Přejít na symbol v pracovním prostoru",
	"c_cpp.configuration.exclusionPolicy.description": "Dává rozšíření pokyn, kdy se při určování, které soubory se mají přidat do databáze navigace v kódu při průchodu cestami v poli browse.path, má používat nastavení files.exclude. checkFolders znamená, že filtry vyloučení se budou vyhodnocovat pro každou složku jen jednou (nekontrolují se jednotlivé soubory). checkFilesAndFolders znamená, že filtry vyloučení se budou vyhodnocovat pro každý nalezený soubor a složku. Pokud vaše nastavení files.exclude obsahuje jen složky, checkFolders je nejlepší volbou, která zvýší rychlost, jakou rozšíření může inicializovat databázi navigace v kódu.",
	"c_cpp.configuration.preferredPathSeparator.description": "Znak, který se použije jako oddělovač cest pro výsledky automatického dokončení direktiv #include",
	"c_cpp.configuration.simplifyStructuredComments.description": "If true, tooltips of hover and auto-complete will only display certain labels of structured comments. Otherwise, all comments are displayed.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.string.description": "Vzor, který zahájí víceřádkový nebo jednořádkový blok komentáře. Výchozí vzor pro pokračování je pro víceřádkové bloky komentářů *, nebo tento řetězec pro jednořádkové bloky.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.begin.description": "Vzor, který zahájí víceřádkový nebo jednořádkový blok komentáře",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.continue.description": "Text, který se vloží na další řádek, když se ve víceřádkovém nebo jednořádkovém bloku komentáře stiskne klávesa Enter.",
	"c_cpp.configuration.commentContinuationPatterns.description": "Definuje chování editoru, když se ve víceřádkovém nebo jednořádkovém bloku komentáře stiskne klávesa Enter.",
	"c_cpp.configuration.configurationWarnings.description": "Určuje, jestli se budou zobrazovat automaticky otevíraná oznámení, když rozšíření poskytovatele konfigurací nebude moct poskytnout konfiguraci pro určitý zdrojový soubor.",
	"c_cpp.configuration.intelliSenseCachePath.description": "Definuje cestu ke složce pro předkompilované hlavičky uložené do mezipaměti, které používá IntelliSense. Výchozí cesta k mezipaměti je %LocalAppData%/Microsoft/vscode-cpptools ve Windows, $XDG_CACHE_HOME/vscode-cpptools/ v Linuxu (případně $HOME/.cache/vscode-cpptools/, pokud se nedefinovalo XDG_CACHE_HOME) a $HOME/Library/Caches/vscode-cpptools/ na Macu. Výchozí cesta se použije, když se nezadá žádná cesta nebo když zadaná cesta nebude platná.",
	"c_cpp.configuration.intelliSenseCacheSize.description": "Maximální velikost místa na pevném disku pro předkompilované hlavičky uložené do mezipaměti na jeden pracovní prostor v megabajtech. Skutečné využití se může pohybovat kolem této hodnoty. Výchozí velikost je 5120 MB. Když se velikost nastaví na 0, ukládání předkompilovaných hlaviček do mezipaměti se zakáže.",
	"c_cpp.configuration.default.includePath.description": "The value to use in a configuration if \"includePath\" is not specified in c_cpp_properties.json. If \"includePath\" is specified, add \"${default}\" to the array to insert the values from this setting.",
	"c_cpp.configuration.default.defines.description": "Hodnota, která se použije v konfiguraci, pokud se nezadá defines, nebo hodnoty, které se mají vložit, pokud se v defines nachází ${default}",
	"c_cpp.configuration.default.macFrameworkPath.description": "Hodnota, která se použije v konfiguraci, pokud se nezadá macFrameworkPath, nebo hodnoty, které se mají vložit, pokud se ve macFrameworkPath nachází ${default}",
	"c_cpp.configuration.default.windowsSdkVersion.description": "Verze cesty pro vložené soubory sady Windows SDK, která se má použít ve Windows, např. 10.0.17134.0",
	"c_cpp.configuration.default.compileCommands.description": "Hodnota, která se použije v konfiguraci, pokud se nezadá compileCommands nebo pokud se nastaví na ${default}",
	"c_cpp.configuration.default.forcedInclude.description": "Hodnota, která se použije v konfiguraci, pokud se nezadá forcedInclude, nebo hodnoty, které se mají vložit, pokud se ve forcedInclude nachází ${default}",
	"c_cpp.configuration.default.intelliSenseMode.description": "Hodnota, která se použije v konfiguraci, pokud se nezadá intelliSenseMode nebo pokud se nastaví na ${default}",
	"c_cpp.configuration.default.compilerPath.description": "Hodnota, která se použije v konfiguraci, pokud se nezadá compilerPath nebo pokud se nastaví na ${default}",
	"c_cpp.configuration.default.compilerArgs.description": "Hodnota, která se použije v konfiguraci, pokud se nezadá compilerArgs nebo pokud se nastaví na ${default}",
	"c_cpp.configuration.default.cStandard.description": "Hodnota, která se použije v konfiguraci, pokud se nezadá cStandard nebo pokud se nastaví na ${default}",
	"c_cpp.configuration.default.cppStandard.description": "Hodnota, která se použije v konfiguraci, pokud se nezadá cppStandard nebo pokud se nastaví na ${default}",
	"c_cpp.configuration.default.configurationProvider.description": "Hodnota, která se použije v konfiguraci, pokud se nezadá configurationProvider nebo pokud se nastaví na ${default}",
	"c_cpp.configuration.default.browse.path.description": "Hodnota, která se použije v konfiguraci, pokud se nezadá browse.path, nebo hodnoty, které se mají vložit, pokud se v browse.path nachází ${default}",
	"c_cpp.configuration.default.browse.databaseFilename.description": "Hodnota, která se použije v konfiguraci, pokud se nezadá browse.databaseFilename nebo pokud se nastaví na ${default}",
	"c_cpp.configuration.default.browse.limitSymbolsToIncludedHeaders.description": "Hodnota, která se použije v konfiguraci, pokud se nezadá browse.limitSymbolsToIncludedHeaders nebo pokud se nastaví na ${default}",
	"c_cpp.configuration.default.systemIncludePath.description": "Hodnota, která se použije pro systémovou cestu pro vložené soubory. Pokud se nastaví, přepíše systémovou cestu pro vložené soubory získanou z nastavení compilerPath a compileCommands.",
	"c_cpp.configuration.default.enableConfigurationSquiggles.description": "Určuje, jestli rozšíření ohlásí chyby zjištěné v souboru c_cpp_properties.json.",
	"c_cpp.configuration.default.customConfigurationVariables.description": "Hodnota, která se použije v konfiguraci, pokud se nenastaví customConfigurationVariables, nebo hodnoty, které se mají vložit, pokud se v customConfigurationVariables jako klíč nachází ${default}",
	"c_cpp.configuration.updateChannel.description": "Pokud chcete automaticky stahovat a instalovat nejnovější sestavení rozšíření v programu Insider, která zahrnují připravované funkce a opravy chyb, nastavte možnost Účastníci programu Insider.",
	"c_cpp.configuration.experimentalFeatures.description": "Určuje, jestli je možné použít experimentální funkce.",
	"c_cpp.configuration.suggestSnippets.description": "Pokud se nastaví na true, jazykový server poskytne fragmenty kódu.",
	"c_cpp.configuration.enhancedColorization.description": "If enabled, code is colorized based on IntelliSense. This setting only applies if intelliSenseEngine is set to \"Default\".",
	"c_cpp.configuration.codeFolding.description": "Když se tato možnost povolí, rozsahy sbalování kódu bude poskytovat jazykový server.",
	"c_cpp.configuration.vcpkg.enabled.markdownDescription": "Povolte integrační služby pro [správce závislostí vcpkg](https://aka.ms/vcpkg/).",
	"c_cpp.configuration.renameRequiresIdentifier.description": "Když se tato hodnota nastaví na true, operace Přejmenovat symbol bude vyžadovat platný identifikátor C/C++.",
	"c_cpp.configuration.debugger.useBacktickCommandSubstitution.description": "Když se nastaví na true, nahrazování příkazů shellu ladicího programu bude používat starou verzi obrácené čárky (`).",
	"c_cpp.contributes.views.cppReferencesView.title": "C/C++: výsledky jiných odkazů",
	"c_cpp.debuggers.pipeTransport.description": "Pokud je k dispozici, předá ladicímu programu informaci, aby se připojil ke vzdálenému počítači pomocí dalšího spustitelného souboru jako kanál, který bude přenášet standardní vstup a výstup mezi nástrojem VS Code a spustitelným souborem back-endu ladicího programu s podporou MI (třeba gdb).",
	"c_cpp.debuggers.pipeTransport.default.pipeProgram": "zadejte plně kvalifikovanou cestu názvu programu kanálu, třeba /usr/bin/ssh",
	"c_cpp.debuggers.pipeTransport.default.debuggerPath": "Úplná cesta k ladicímu programu na cílovém počítači, například /usr/bin/gdb",
	"c_cpp.debuggers.pipeTransport.debuggerPath.description": "Úplná cesta k ladicímu programu na cílovém počítači, například /usr/bin/gdb",
	"c_cpp.debuggers.pipeTransport.pipeCwd.description": "Plně kvalifikovaná cesta k pracovnímu adresáři pro cílový program",
	"c_cpp.debuggers.pipeTransport.pipeProgram.description": "Plně kvalifikovaný příkaz kanálu, který se má provést",
	"c_cpp.debuggers.pipeTransport.pipeArgs.description": "Argumenty příkazového řádku, které se předávají do cílového programu, aby se nakonfigurovalo připojení",
	"c_cpp.debuggers.pipeTransport.pipeEnv.description": "Proměnné prostředí, které se předávají do cílového programu",
	"c_cpp.debuggers.pipeTransport.quoteArgs.description": "Pokud jednotlivé argumenty pro pipeProgram obsahují znaky (například mezery nebo tabulátory), mají se používat uvozovky? Pokud se nastaví hodnota false, nebudou se už v příkazu ladicího programu automaticky používat uvozovky. \nVýchozí hodnota je true.",
	"c_cpp.debuggers.logging.description": "Nepovinné příznaky, které určují, které typy zpráv se mají protokolovat do konzoly ladění",
	"c_cpp.debuggers.logging.exceptions.description": "Nepovinný příznak, který určuje, jestli se do konzoly ladění mají protokolovat zprávy výjimek. Výchozí hodnota je true.",
	"c_cpp.debuggers.logging.moduleLoad.description": "Nepovinný příznak, který určuje, jestli se do konzoly ladění mají protokolovat události načítání modulu. Výchozí hodnota je true.",
	"c_cpp.debuggers.logging.programOutput.description": "Nepovinný příznak, který určuje, jestli se do konzoly ladění má protokolovat výstup programu. Výchozí hodnota je true.",
	"c_cpp.debuggers.logging.engineLogging.description": "Nepovinný příznak, který určuje, jestli se do konzoly ladění mají protokolovat diagnostické zprávy ladicího stroje. Výchozí hodnota je false.",
	"c_cpp.debuggers.logging.trace.description": "Nepovinný příznak, který určuje, jestli se do konzoly ladění má protokolovat trasování příkazů diagnostického adaptéru. Výchozí hodnota je false.",
	"c_cpp.debuggers.logging.traceResponse.description": "Nepovinný příznak, který určuje, jestli se do konzoly ladění má protokolovat trasování příkazů a odpovědí diagnostického adaptéru. Výchozí hodnota je false.",
	"c_cpp.debuggers.cppvsdbg.logging.threadExit.description": "Nepovinný příznak, který určuje, jestli se do konzoly ladění mají protokolovat ukončovací zprávy vlákna. Výchozí: false",
	"c_cpp.debuggers.cppvsdbg.logging.processExit.description": "Nepovinný příznak, který určuje, jestli se mají ukončovací zprávy cílového procesu protokolovat do konzoly ladění, nebo jestli je ladění zastavené. Výchozí: true",
	"c_cpp.debuggers.text.description": "Příkaz ladicího programu, který se má provést",
	"c_cpp.debuggers.description.description": "Volitelný popis příkazu",
	"c_cpp.debuggers.ignoreFailures.description": "Pokud má hodnotu true, měla by se ignorovat selhání z daného příkazu. Výchozí hodnota je false.",
	"c_cpp.debuggers.program.description": "Úplná cesta ke spustitelnému souboru programu",
	"c_cpp.debuggers.args.description": "Argumenty příkazového řádku, které se předávají do programu",
	"c_cpp.debuggers.cppdbg.type.description": "Typ modulu. Musí to být cppdbg.",
	"c_cpp.debuggers.cppvsdbg.type.description": "Typ modulu. Musí to být cppvsdbg.",
	"c_cpp.debuggers.targetArchitecture.description": "Architektura laděného procesu. Pokud tento parametr není nastavený, automaticky se rozpozná. Povolené hodnoty jsou x86, arm, arm64, mips, x64, amd64, x86_64.",
	"c_cpp.debuggers.cwd.description": "Pracovní adresář cíle",
	"c_cpp.debuggers.setupCommands.description": "Jeden nebo více příkazů GDB/LLDB, které se mají provést, aby se nastavil odpovídající ladicí program. Příklad: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }]",
	"c_cpp.debuggers.customLaunchSetupCommands.description": "Pokud je k dispozici, nahradí výchozí příkazy, které se používají ke spuštění cíle, nějakými jinými příkazy. Může to být například \"-target-attach\", který slouží pro připojení k cílovému procesu. Prázdný seznam příkazů nenahrazuje příkazy spuštění ničím, což může být užitečné, když ladicí program poskytuje možnosti spuštění jako možnosti příkazového řádku. Příklad: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }]",
	"c_cpp.debuggers.launchCompleteCommand.description": "Příkaz, který se provede po úplném nastavení ladicího programu a způsobí spuštění cílového procesu. Povolené hodnoty jsou exec-run, exec-continue, None. Výchozí hodnota je exec-run.",
	"c_cpp.debuggers.cppdbg.visualizerFile.description": "Soubor .natvis, který se použije při ladění tohoto procesu. Tato možnost není kompatibilní s přehledným výpisem GDB. Pokud používáte toto nastavení, podívejte se i na showDisplayString.",
	"c_cpp.debuggers.cppvsdbg.visualizerFile.description": "Soubor .natvis, který se použije při ladění tohoto procesu.",
	"c_cpp.debuggers.showDisplayString.description": "Když se zadá visualizerFile, showDisplayString povolí zobrazovaný řetězec. Když se tato možnost zapne, může to způsobit nižší výkon při ladění.",
	"c_cpp.debuggers.environment.description": "Proměnné prostředí, které se mají přidat do prostředí pro program. Příklad: [ { \"name\": \"squid\", \"value\": \"clam\" } ]",
	"c_cpp.debuggers.envFile.description": "Absolutní cesta k souboru, který obsahuje definice proměnných prostředí. Tento soubor obsahuje na každém řádku pár klíč-hodnota rozdělený znakem rovnítka. Např. KLÍČ=HODNOTA.",
	"c_cpp.debuggers.additionalSOLibSearchPath.description": "Seznam středníkem oddělených adresářů, ve kterých se budou hledat soubory .so. Příklad: c:\\dir1;c:\\dir2",
	"c_cpp.debuggers.MIMode.description": "Určuje ladicí program konzoly, ke kterému se připojí MIDebugEngine. Povolené hodnoty jsou gdb a lldb.",
	"c_cpp.debuggers.miDebuggerPath.description": "Cesta k ladicímu programu MI (třeba gdb). Pokud se nezadá, vyhledá se pro ladicí program nejdříve cesta.",
	"c_cpp.debuggers.miDebuggerArgs.description": "Další argumenty pro ladicí program MI (třeba gdb)",
	"c_cpp.debuggers.miDebuggerServerAddress.description": "Síťová adresa MI Debugger Serveru, ke kterému se má připojit (příklad: localhost:1234)",
	"c_cpp.debuggers.stopAtEntry.description": "Nepovinný parametr. Když se nastaví na true, ladicí program by se měl zastavit u vstupního bodu cíle. Pokud se předá processId, nemá parametr žádný vliv.",
	"c_cpp.debuggers.debugServerPath.description": "Volitelná úplná cesta k ladicímu serveru, který se má spustit. Výchozí hodnota je null.",
	"c_cpp.debuggers.debugServerArgs.description": "Volitelné argumenty ladicího serveru. Výchozí hodnota je null.",
	"c_cpp.debuggers.serverStarted.description": "Volitelný vzorek spuštěný na serveru, který se má vyhledat ve výstupu ladicího serveru. Výchozí hodnota je null.",
	"c_cpp.debuggers.filterStdout.description": "Vyhledá ve vzorku spuštěném na serveru stream stdout a zaznamená stdout do výstupu ladění. Výchozí hodnota je true.",
	"c_cpp.debuggers.filterStderr.description": "Vyhledá ve vzorku spuštěném na serveru stream stderr a zaznamená stderr do výstupu ladění. Výchozí hodnota je false.",
	"c_cpp.debuggers.serverLaunchTimeout.description": "Volitelný čas (v milisekundách) čekání ladicího programu, než se spustí debugServer. Výchozí hodnota je 10000.",
	"c_cpp.debuggers.coreDumpPath.description": "Volitelná úplná cesta k základnímu souboru výpisu pro zadaný program. Výchozí hodnota je null.",
	"c_cpp.debuggers.cppdbg.externalConsole.description": "Pokud se nastaví na true, spustí se pro laděný proces konzola. Pokud se nastaví hodnota false, v Linuxu a ve Windows se zobrazí integrovaná konzola.",
	"c_cpp.debuggers.cppvsdbg.externalConsole.description": "Pokud se nastaví na true, spustí se pro laděný proces konzola. Pokud se nastaví hodnota false, konzola se nespustí.",
	"c_cpp.debuggers.avoidWindowsConsoleRedirection.description": "Pokud se nastaví na true, zakáže přesměrování konzoly laděného procesu, které se vyžaduje pro podporu integrovaného terminálu.",
	"c_cpp.debuggers.sourceFileMap.description": "Nepovinná mapování zdrojových souborů předaná ladicímu stroji. Příklad: { \"/original/source/path\":\"/current/source/path \"}",
	"c_cpp.debuggers.processId.anyOf.description": "Nepovinné ID procesu, ke kterému se má ladicí program připojit. Pokud chcete získat seznam místních spuštěných procesů, ke kterým se dá připojit, použijte ${command:pickProcess}. Poznámka: Některé platformy vyžadují pro připojení k procesu oprávnění správce.",
	"c_cpp.debuggers.symbolSearchPath.description": "Seznam středníkem oddělených adresářů, ve kterých se budou hledat soubory symbolů (tj. soubory pdb). Příklad: c:\\dir1;c:\\dir2",
	"c_cpp.debuggers.dumpPath.description": "Volitelná úplná cesta k souboru výpisu pro zadaný program. Příklad: c:\\temp\\app.dmp. Výchozí hodnota je null.",
	"c_cpp.debuggers.enableDebugHeap.description": "Když se nastaví na false, proces se spustí se zakázanou haldou ladění. Tato možnost nastaví proměnnou prostředí _NO_DEBUG_HEAP na 1.",
	"c_cpp.debuggers.symbolLoadInfo.description": "Explicitní řízení načítání symbolů",
	"c_cpp.debuggers.symbolLoadInfo.loadAll.description": "V případě hodnoty true se načtou symboly pro všechny knihovny (lib), jinak se nenačtou žádné symboly solib. Výchozí hodnota je true.",
	"c_cpp.debuggers.symbolLoadInfo.exceptionList.description": "Seznam názvů souborů (s povolenými zástupnými znaky) oddělených středníky (;). Upraví chování pro LoadAll. Hodnota true pro LoadAll znamená, že se nemají načítat symboly pro knihovny (lib), které odpovídají libovolnému názvu v seznamu. V opačném případě se mají načíst symboly pro všechny odpovídající knihovny. Příklad: foo.so;bar.so",
	"c_cpp.debuggers.requireExactSource.description": "Volitelný příznak, který vyžaduje, aby aktuální zdrojový kód odpovídal souboru pdb"
}