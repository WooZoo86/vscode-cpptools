/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"c_cpp.command.configurationSelect.title": "構成を選択する...",
	"c_cpp.command.configurationProviderSelect.title": "構成プロバイダーを変更する...",
	"c_cpp.command.configurationEditJSON.title": "構成の編集 (JSON)",
	"c_cpp.command.configurationEditUI.title": "構成の編集 (UI)",
	"c_cpp.command.switchHeaderSource.title": "ヘッダー/ソースの切り替え",
	"c_cpp.command.enableErrorSquiggles.title": "エラーの波線を有効にする",
	"c_cpp.command.disableErrorSquiggles.title": "エラーの波線を無効にする",
	"c_cpp.command.toggleIncludeFallback.title": "インクルード エラー時の IntelliSense エンジンのフォールバックの切り替え",
	"c_cpp.command.toggleDimInactiveRegions.title": "非アクティブな領域の色づけの切り替え",
	"c_cpp.command.resetDatabase.title": "IntelliSense データベースのリセット",
	"c_cpp.command.takeSurvey.title": "アンケートに答える",
	"c_cpp.command.buildAndDebugActiveFile.title": "アクティブ ファイルのビルドとデバッグ",
	"c_cpp.command.logDiagnostics.title": "診断のログ記録",
	"c_cpp.command.referencesViewGroupByType.title": "参照渡し型でグループ化",
	"c_cpp.command.referencesViewUngroupByType.title": "参照の種類によるグループ化解除",
	"c_cpp.command.rescanWorkspace.title": "ワークスペースの再スキャン",
	"c_cpp.command.vcpkgClipboardInstallSuggested.title": "vcpkg インストール コマンドをクリップボードにコピーする",
	"c_cpp.command.vcpkgOnlineHelpSuggested.title": "vcpkg のヘルプ ページへのアクセス",
	"c_cpp.configuration.formatting.description": "Configures the formatting engine",
	"c_cpp.configuration.formatting.clangFormat.description": "clang-format will be used to format code",
	"c_cpp.configuration.formatting.vcFormat.description": "The Visual C++ formatting engine will be used to format code",
	"c_cpp.configuration.formatting.Default.description": "clang-format will be used to format code",
	"c_cpp.configuration.formatting.Disabled.description": "Code formatting will be disabled",
	"c_cpp.configuration.vcFormat.indent.braces.description": "Braces are indented by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.description": "When a new line is typed, indent the new line relatively to:",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.outermostParenthesis.description": "the outermost open parenthesis",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.innermostParenthesis.description": "the innermost open parenthesis",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.statementBegin.description": "the beginning of the current statement",
	"c_cpp.configuration.vcFormat.indent.preserveIndentationWithinParentheses.description": "When a new line is typed, it is aligned under the opening parenthesis or it is indented by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.caseLabels.description": "Labels are indented relative to switch statements by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.caseContents.description": "Code inside case is indented relative to its label by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.caseContentsWhenBlock.description": "Indent braces following a case statement by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.lambdaBracesWhenParameter.description": "Indent braces of lambdas used as function parameters relative to the start of the statement by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.description": "The position of goto labels",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.oneLeft.description": "to the left of the current code indentation, by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.leftmostColumn.description": "at the leftmost edge of the code",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.none.description": "goto labels will not be formatted",
	"c_cpp.configuration.vcFormat.indent.preprocessor.description": "The position of preprocessor directives",
	"c_cpp.configuration.vcFormat.indent.preprocessor.oneLeft.description": "to the left of the current code indentation, by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.preprocessor.leftmostColumn.description": "at the leftmost edge of the code",
	"c_cpp.configuration.vcFormat.indent.preprocessor.none.description": "preprocessor directives will not be formatted",
	"c_cpp.configuration.vcFormat.indent.accessSpecifiers.description": "Access specifiers are indented relative to class or struct definitions by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.namespaceContents.description": "Code is indented relative to its enclosing namespace by the amount specified in the Editor: Tab Size setting",
	"c_cpp.configuration.vcFormat.indent.preserveComment.description": "コメントのインデントは、書式設定操作中に変更されません。",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.namespace.description": "The position of opening braces for namespaces",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.type.description": "The position of opening braces for type definitions",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.lambda.description": "The position of opening braces for lambda functions",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.function.description": "The position of opening braces for functions",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.block.description": "The position of opening braces for control blocks",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.newLine.description": "opening braces are moved to a new line",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.sameLine.description": "opening braces are kept on the same line and a space is added before each one",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.ignore.description": "opening braces are not formatted",
	"c_cpp.configuration.vcFormat.newLine.scopeBracesOnSeparateLines.description": "Place opening and closing braces for scopes on separate lines",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyType.description": "型が空の場合は、終わりかっこを始めかっこと同じ行に移動する",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyFunction.description": "関数の本体が空の場合は、終わりかっこを始めかっこと同じ行に移動する",
	"c_cpp.configuration.vcFormat.newLine.beforeCatch.description": "新しい行に 'catch' および類似キーワードを配置する",
	"c_cpp.configuration.vcFormat.newLine.beforeElse.description": "新しい行に 'else' を配置する",
	"c_cpp.configuration.vcFormat.newLine.beforeWhileInDoWhile.description": "do-while ループの 'while' を新しい行に配置する",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.description": "Spacing between function names and opening parentheses of argument lists",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.insert.description": "add a space before the opening parenthesis of a function",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.remove.description": "spaces before opening parenthesis of a function are removed",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.ignore.description": "spaces are left as entered",
	"c_cpp.configuration.vcFormat.space.withinParameterListParentheses.description": "A space is added after the opening parenthesis and also before the closing parenthesis in function parameter lists",
	"c_cpp.configuration.vcFormat.space.betweenEmptyParameterListParentheses.description": "When a function parameter list is empty, a space is inserted between its parentheses",
	"c_cpp.configuration.vcFormat.space.afterKeywordsInControlFlowStatements.description": "A space is added between the keyword and opening parenthesis in control flow statements",
	"c_cpp.configuration.vcFormat.space.withinControlFlowStatementParentheses.description": "A space is added after the opening parenthesis and also before the closing parenthesis in control flow statements",
	"c_cpp.configuration.vcFormat.space.beforeLambdaOpenParenthesis.description": "A space is added before the opening parenthesis of lambda argument lists",
	"c_cpp.configuration.vcFormat.space.withinCastParentheses.description": "A space is added after the opening parenthesis and also before the closing parenthesis of a C-style cast",
	"c_cpp.configuration.vcFormat.space.afterCastCloseParenthesis.description": "A space is added after the closing parenthesis of a C-style cast",
	"c_cpp.configuration.vcFormat.space.withinExpressionParentheses.description": "A space is added after the opening parenthesis and also before the closing parenthesis of a parenthesized expression",
	"c_cpp.configuration.vcFormat.space.beforeBlockOpenBrace.description": "A space is added before the opening braces of scope blocks",
	"c_cpp.configuration.vcFormat.space.betweenEmptyBraces.description": "When braces are empty and on the same line, a space is inserted between them",
	"c_cpp.configuration.vcFormat.space.beforeInitializerListOpenBrace.description": "A space is added before the opening brace of uniform initialization and initializer lists",
	"c_cpp.configuration.vcFormat.space.withinInitializerListBraces.description": "A space is added after the opening brace and also before the closing brace of uniform initialization and initializer lists",
	"c_cpp.configuration.vcFormat.space.preserveInInitializerList.description": "Spaces around commas are preserved insider uniform initialization and initializer lists",
	"c_cpp.configuration.vcFormat.space.beforeOpenSquareBracket.description": "A space is added before opening square brackets",
	"c_cpp.configuration.vcFormat.space.withinSquareBrackets.description": "A space is added after the opening square bracket and also before the closing square bracket",
	"c_cpp.configuration.vcFormat.space.beforeEmptySquareBrackets.description": "When square brackets are empty, a space is added before the opening bracket",
	"c_cpp.configuration.vcFormat.space.betweenEmptySquareBrackets.description": "When square brackets are empty, a space is inserted between them",
	"c_cpp.configuration.vcFormat.space.groupSquareBrackets.description": "For multi-dimensional arrays, all space between brackets is removed. Other settings that control space are overridden",
	"c_cpp.configuration.vcFormat.space.withinLambdaBrackets.description": "A space is added after the opening square bracket and also before the closing square bracket",
	"c_cpp.configuration.vcFormat.space.betweenEmptyLambdaBrackets.description": "When square brackets are empty, a space is inserted between them",
	"c_cpp.configuration.vcFormat.space.beforeComma.description": "A space is added before every comma",
	"c_cpp.configuration.vcFormat.space.afterComma.description": "A space is added after every comma",
	"c_cpp.configuration.vcFormat.space.removeAroundMemberOperators.description": "Spaces around member access operators, pointer-to-member operators, and scope resolution operators are removed",
	"c_cpp.configuration.vcFormat.space.beforeInheritanceColon.description": "A space is added before the colon for inherited types in class definitions",
	"c_cpp.configuration.vcFormat.space.beforeConstructorColon.description": "A space is added before the colon in constructor definitions",
	"c_cpp.configuration.vcFormat.space.removeBeforeSemicolon.description": "Spaces are removed before every semicolon",
	"c_cpp.configuration.vcFormat.space.insertAfterSemicolon.description": "A space is inserted after every semicolon",
	"c_cpp.configuration.vcFormat.space.removeAroundUnaryOperator.description": "Spaces between unary operators and operands are removed",
	"c_cpp.configuration.vcFormat.space.aroundBinaryOperator.description": "Spaces around binary operators",
	"c_cpp.configuration.vcFormat.space.aroundAssignmentOperator.description": "Spaces around assignment operators",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.description": "Spaces around pointer and reference operators",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.left.description": "pointer and reference operators are aligned to the left",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.center.description": "pointer and reference operators are centered",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.right.description": "pointer and reference operators are aligned to the right",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.ignore.description": "pointer and reference operators are not formatted",
	"c_cpp.configuration.vcFormat.space.aroundTernaryOperator.description": "Spaces around conditional operators",
	"c_cpp.configuration.vcFormat.space.aroundOperators.insert.description": "a space is added before the operator and also after it",
	"c_cpp.configuration.vcFormat.space.aroundOperators.remove.description": "spaces before and after the operator are removed",
	"c_cpp.configuration.vcFormat.space.aroundOperators.ignore.description": "spaces are left as entered",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.description": "ブロックの折り返しオプション",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.oneLiners.description": "a complete code block that is entered on one line is kept on one line, regardless of the values of any of the VC Format: New Line settings",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.allOneLineScopes.description": "any code where the opening and closing brace is entered on one line is kept on one line, regardless of the values of any of the VC Format: New Line settings",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.never.description": "code blocks are always formatted based on the values of the VC Format: New Line settings",
	"c_cpp.configuration.clang_format_path.description": "clang-format の実行可能ファイルの完全なパスです。指定されておらず、clang-format が環境パスに置かれている場合は、それが使用されます。環境パスに見つからない場合は、拡張機能にバンドルされている clang-format のコピーが使用されます。",
	"c_cpp.configuration.clang_format_style.description": "Coding style, currently supports: file, LLVM, Google, Chromium, Mozilla, WebKit, Emulated Visual Studio, and Visual Studio. Use \"file\" to load the style from a .clang-format file in the current or parent directory. When \"Visual Studio\" is used, the Visual C++ formatting engine will be invoked instead of clang-format. \"Emulated Visual Studio\" will generate a set of Visual Studio-like formatting options for clang-format. Use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All }",
	"c_cpp.configuration.clang_format_fallbackStyle.description": "Name of the predefined style used as a fallback in case clang-format is invoked with style \"file\" but the .clang-format file is not found. In addition to the values supported by clang_format_style, you may also specify \"none\" to select no fallback style.",
	"c_cpp.configuration.clang_format_sortIncludes.description": "設定されている場合、SortIncludes パラメーターによって決定されるインクルードの並べ替え動作がオーバーライドされます。",
	"c_cpp.configuration.intelliSenseEngine.description": "IntelliSense プロバイダーを制御します。\"Tag Parser\" の場合、コンテキストを意識しない \"fuzzy\" の結果が提供されます。\"Default\" の場合、コンテキストを意識する結果が返されます。\"Disabled\" の場合、C/C++ 言語サービスの機能がオフになります。",
	"c_cpp.configuration.intelliSenseEngineFallback.description": "#include エラーを含む翻訳単位に対して、IntelliSense エンジンをタグ パーサーに自動的に切り替えるかどうかを制御します。",
	"c_cpp.configuration.autocomplete.description": "オートコンプリート プロバイダーを制御します。\"Default\" の場合、アクティブな IntelliSense エンジンが使用されます。\"Disabled\" の場合、Visual Studio Code が提供する単語ベースの補完が使用されます。",
	"c_cpp.configuration.errorSquiggles.description": "IntelliSense エンジンによって検出された疑わしいコンパイル エラーを、エディターに報告するかどうかを制御します。この設定はタグ パーサー エンジンでは無視されます。",
	"c_cpp.configuration.dimInactiveRegions.description": "アクティブではないプリプロセッサ ブロックを、アクティブ コードと違う色づけにするかどうかを制御します。この設定は、IntelliSense が無効になっている場合、または既定のハイ コントラスト テーマを使用している場合は効果がありません。",
	"c_cpp.configuration.inactiveRegionOpacity.description": "アクティブではないプリプロセッサ ブロックの不透明度を制御します。0.1 から 1.0 の範囲でスケーリングします。この設定は、アクティブでない領域の暗転が有効な場合にのみ適用されます。",
	"c_cpp.configuration.inactiveRegionForegroundColor.description": "アクティブでないプリプロセッサ ブロックのフォントの色を制御します。入力の形式は 16 進数の色コードまたは有効なテーマの色です。設定しない場合、既定ではエディターの構文カラー スキームになります。この設定は、アクティブでない領域の暗転が有効な場合にのみ適用されます。",
	"c_cpp.configuration.inactiveRegionBackgroundColor.description": "アクティブでないプリプロセッサ ブロックの背景色を制御します。入力の形式は 16 進数の色コードまたは有効なテーマの色です。設定しない場合、既定では透明になります。この設定は、アクティブでない領域の暗転が有効な場合にのみ適用されます。",
	"c_cpp.configuration.loggingLevel.description": "出力パネルでのログの詳細度。詳細度のレベルは、低いものから順に次のとおりです: None < Error < Warning < Information < Debug.",
	"c_cpp.configuration.autoAddFileAssociations.description": "ファイルが C/C++ ファイルからのナビゲーション操作の対象である場合に、files.associations に自動的に追加されるかどうかを制御します。",
	"c_cpp.configuration.workspaceParsingPriority.description": "アクティブではないワークスペース ファイルの解析にスリープを使用して、CPU の使用率が 100% になるのを回避するかどうかを制御します。highest/high/medium/low の値は、おおよそ CPU の使用率 100/75/50/25% に対応します。",
	"c_cpp.configuration.workspaceSymbols.description": "[ワークスペース内のシンボルへ移動] が呼び出されたときにクエリ結果に含めるシンボル",
	"c_cpp.configuration.exclusionPolicy.description": "\"browse.path\" 配列内のパスを走査する際、コード ナビゲーションのデータベースに追加しなければならないファイルを決定するときに、いつ \"files.exclude\" 設定を使用するかを拡張機能に指示します。\"checkFolders\" は、除外フィルターがフォルダーごとに 1 度だけ評価されることを意味します (個々のファイルはチェックされません)。\"checkFilesAndFolders\" は、除外フィルターが、見つかるファイルおよびフォルダーすべてに対して評価されることを意味します。\"files.exclude\" 設定にフォルダーのみが含まれる場合は \"checkFolders\" が最適で、拡張機能がコード ナビゲーションのデータベースを初期化する速度が向上します。",
	"c_cpp.configuration.preferredPathSeparator.description": "#include のオートコンプリート結果でパス区切り記号として使用される文字です。",
	"c_cpp.configuration.simplifyStructuredComments.description": "If true, tooltips of hover and auto-complete will only display certain labels of structured comments. Otherwise, all comments are displayed.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.string.description": "複数行または単一行のコメント ブロックの先頭に置くパターン。継続のパターンの既定値は、複数行コメント ブロックの場合は ' * '、単一行コメント ブロックの場合はこの文字列です。",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.begin.description": "複数行または単一行のコメント ブロックの先頭に置くパターン。",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.continue.description": "複数行または単一行のコメント ブロック内で Enter を押したときに、次の行に挿入されるテキストです。",
	"c_cpp.configuration.commentContinuationPatterns.description": "複数行または単一行のコメント ブロック内で Enter キーが押されたときのエディターの動作を定義します。",
	"c_cpp.configuration.configurationWarnings.description": "構成プロバイダー拡張機能でソース ファイルの構成を提供できない場合に、ポップアップ通知を表示するかどうかを指定します。",
	"c_cpp.configuration.intelliSenseCachePath.description": "IntelliSense が使用する、キャッシュされたプリコンパイル済みヘッダーのフォルダー パスを定義します。既定のキャッシュ パスは、Windows では \"%LocalAppData%/Microsoft/vscode-cpptools\"、Linux では \"$XDG_CACHE_HOME/vscode-cpptools/\" (XDG_CACHE_HOME が定義されていない場合は、\"$HOME/.cache/vscode-cpptools/\" )、Mac では \"$HOME/Library/Caches/vscode-cpptools/\" です。パスが指定されていない場合、または指定したパスが無効な場合は、既定のパスが使用されます。",
	"c_cpp.configuration.intelliSenseCacheSize.description": "キャッシュされたプリコンパイル済みヘッダーの、ワークスペースごとのハード ドライブ領域の最大サイズ (MB 単位)。実際の使用量には多少の誤差があります。既定のサイズは 5120 MB です。サイズが 0 の場合、プリコンパイル済みヘッダーのキャッシュは無効になります。",
	"c_cpp.configuration.default.includePath.description": "The value to use in a configuration if \"includePath\" is not specified in c_cpp_properties.json. If \"includePath\" is specified, add \"${default}\" to the array to insert the values from this setting.",
	"c_cpp.configuration.default.defines.description": "\"defines\" が指定されていない場合に構成で使用される値、または \"defines\" 内に \"${default}\" が存在する場合に挿入される値です。",
	"c_cpp.configuration.default.macFrameworkPath.description": "\"macFrameworkPath\" が指定されていない場合に構成で使用される値、または \"macFrameworkPath\" 内に \"${default}\" が存在する場合に挿入される値です。",
	"c_cpp.configuration.default.windowsSdkVersion.description": "Windows で使用する Windows SDK インクルード パスのバージョン (例: '10.0.17134.0')。",
	"c_cpp.configuration.default.compileCommands.description": "\"compileCommands\" が指定されていないか、\"${default}\" に設定されている場合に、構成で使用される値です。",
	"c_cpp.configuration.default.forcedInclude.description": "\"forcedInclude\" が指定されていない場合に構成で使用される値、または \"forcedInclude\" 内に \"${default}\" が存在する場合に挿入される値です。",
	"c_cpp.configuration.default.intelliSenseMode.description": "\"intelliSenseMode\" が指定されていないか、\"${default}\" に設定されている場合に、構成で使用される値です。",
	"c_cpp.configuration.default.compilerPath.description": "\"compilerPath\" が指定されていないか、\"${default}\" に設定されている場合に、構成で使用される値です。",
	"c_cpp.configuration.default.compilerArgs.description": "\"compilerArgs\" が指定されていないか、\"${default}\" に設定されている場合に、構成で使用される値です。",
	"c_cpp.configuration.default.cStandard.description": "\"cStandard\" が指定されていないか、\"${default}\" に設定されている場合に、構成で使用される値です。",
	"c_cpp.configuration.default.cppStandard.description": "\"cppStandard\" が指定されていないか、\"${default}\" に設定されている場合に、構成で使用される値です。",
	"c_cpp.configuration.default.configurationProvider.description": "\"configurationProvider\" が指定されていないか、\"${default}\" に設定されている場合に、構成で使用される値です。",
	"c_cpp.configuration.default.browse.path.description": "\"browse.path\" が指定されていない場合に構成で使用される値、または \"browse.path\" 内に \"${default}\" が存在する場合に挿入される値です。",
	"c_cpp.configuration.default.browse.databaseFilename.description": "\"browse.databaseFilename\" が指定されていないか、\"${default}\" に設定されている場合に、構成で使用される値です。",
	"c_cpp.configuration.default.browse.limitSymbolsToIncludedHeaders.description": "\"browse.limitSymbolsToIncludedHeaders\" が指定されていないか、\"${default}\" に設定されている場合に、構成で使用される値です。",
	"c_cpp.configuration.default.systemIncludePath.description": "システム インクルード パスに使用する値です。これを設定した場合、\"compilerPath\" および \"compileCommands\" の設定によって取得されるシステム インクルード パスが上書きされます。",
	"c_cpp.configuration.default.enableConfigurationSquiggles.description": "拡張機能が、c_cpp_properties.json で検出されたエラーを報告するかどうかを制御します。",
	"c_cpp.configuration.default.customConfigurationVariables.description": "\"customConfigurationVariables\" が設定されていない場合に構成で使用される値、または \"customConfigurationVariables\" 内に \"${default}\" がキーとして存在する場合に挿入される値です。",
	"c_cpp.configuration.updateChannel.description": "\"Insider\" に設定すると、拡張機能の最新の Insider ビルドが自動的にダウンロードされてインストールされます。これには、次期バージョンの機能とバグ修正が含まれています。",
	"c_cpp.configuration.experimentalFeatures.description": "\"experimental\" の機能を使用できるかどうかを制御します。",
	"c_cpp.configuration.suggestSnippets.description": "true の場合、スニペットは言語サーバーによって提供されます。",
	"c_cpp.configuration.enhancedColorization.description": "If enabled, code is colorized based on IntelliSense. This setting only applies if intelliSenseEngine is set to \"Default\".",
	"c_cpp.configuration.codeFolding.description": "有効にした場合、コードの折りたたみの範囲は言語サーバーによって指定されます。",
	"c_cpp.configuration.vcpkg.enabled.markdownDescription": "[vcpkg 依存関係マネージャー](https://aka.ms/vcpkg/) の統合サービスを有効にします。",
	"c_cpp.configuration.renameRequiresIdentifier.description": "true の場合、'シンボルの名前変更' には有効な C/C++ 識別子が必要です。",
	"c_cpp.configuration.debugger.useBacktickCommandSubstitution.description": "True の場合、デバッガー シェルのコマンド置換では古い backtick (') が使用されます",
	"c_cpp.contributes.views.cppReferencesView.title": "C/C++: その他の参照結果",
	"c_cpp.debuggers.pipeTransport.description": "これを指定すると、デバッガーにより、別の実行可能ファイルをパイプとして使用してリモート コンピューターに接続され、VS Code と MI 対応のデバッガー バックエンド実行可能ファイル (gdb など) との間で標準入出力が中継されます。",
	"c_cpp.debuggers.pipeTransport.default.pipeProgram": "パイプ プログラム名の完全修飾パスを入力してください (例: '/usr/bin/ssh')",
	"c_cpp.debuggers.pipeTransport.default.debuggerPath": "対象マシン上のデバッガーへの完全なパス。例: /usr/bin/gdb。",
	"c_cpp.debuggers.pipeTransport.debuggerPath.description": "対象マシン上のデバッガーへの完全なパス。例: /usr/bin/gdb。",
	"c_cpp.debuggers.pipeTransport.pipeCwd.description": "パイプ プログラムに渡す作業ディレクトリの完全修飾パス。",
	"c_cpp.debuggers.pipeTransport.pipeProgram.description": "実行するパイプ コマンドの完全修飾パス。",
	"c_cpp.debuggers.pipeTransport.pipeArgs.description": "接続を構成するためにパイプ プログラムに渡すコマンド ライン引数。",
	"c_cpp.debuggers.pipeTransport.pipeEnv.description": "パイプ プログラムに渡す環境変数。",
	"c_cpp.debuggers.pipeTransport.quoteArgs.description": "pipeProgram の個々の引数に (スペースやタブなどの) 文字が含まれる場合に引用符で囲むかどうか。'false' に設定すると、デバッガー コマンドが自動的に引用符で囲まれることはなくなります。\n既定値は 'true' です。",
	"c_cpp.debuggers.logging.description": "どの種類のメッセージをデバッグ コンソールに記録する必要があるかを決定するオプションのフラグです。",
	"c_cpp.debuggers.logging.exceptions.description": "例外メッセージをデバッグ コンソールに記録するかどうかを決定するオプションのフラグです。既定値は true です。",
	"c_cpp.debuggers.logging.moduleLoad.description": "モジュール読み込みイベントをデバッグ コンソールに記録するかどうかを決定するオプションのフラグです。既定値は true です。",
	"c_cpp.debuggers.logging.programOutput.description": "プログラムの出力をデバッグ コンソールに記録するかどうかを決定するオプションのフラグです。既定値は true です。",
	"c_cpp.debuggers.logging.engineLogging.description": "診断デバッグ エンジンのメッセージをデバッグ コンソールに記録するかどうかを決定するオプションのフラグです。既定値は false です。",
	"c_cpp.debuggers.logging.trace.description": "診断アダプター コマンドのトレースをデバッグ コンソールに記録するかどうかを決定するオプションのフラグです。既定値は false です。",
	"c_cpp.debuggers.logging.traceResponse.description": "診断アダプター コマンドと応答トレースをデバッグ コンソールに記録するかどうかを決定するオプションのフラグです。既定値は false です",
	"c_cpp.debuggers.cppvsdbg.logging.threadExit.description": "スレッドの終了メッセージをデバッグ コンソールに記録するかどうかを決定するオプションのフラグです。既定値: 'false'。",
	"c_cpp.debuggers.cppvsdbg.logging.processExit.description": "ターゲット プロセスの終了メッセージをデバッグ コンソールに記録するか、またはデバッグを停止するかを決定するオプションのフラグです。既定値: 'true'。",
	"c_cpp.debuggers.text.description": "実行するデバッガー コマンドです。",
	"c_cpp.debuggers.description.description": "コマンドの説明 (省略可能)。",
	"c_cpp.debuggers.ignoreFailures.description": "true に設定すると、コマンドの失敗は無視されます。既定値は false です。",
	"c_cpp.debuggers.program.description": "プログラムの実行可能ファイルへの完全なパス。",
	"c_cpp.debuggers.args.description": "プログラムに渡すコマンド ライン引数。",
	"c_cpp.debuggers.cppdbg.type.description": "エンジンの種類。\"cppdbg\" でなければなりません。",
	"c_cpp.debuggers.cppvsdbg.type.description": "エンジンの種類。\"cppvsdbg\" でなければなりません。",
	"c_cpp.debuggers.targetArchitecture.description": "デバッグ対象のアーキテクチャ。このパラメーターを設定しない場合は、自動的に検出されます。可能な値は、x86、arm、arm64、mips、x64、amd64、x86_64 です。",
	"c_cpp.debuggers.cwd.description": "ターゲットの作業ディレクトリです",
	"c_cpp.debuggers.setupCommands.description": "基礎となるデバッガーをセットアップするために実行する 1 つ以上の GDB/LLDB コマンド。例: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }]。",
	"c_cpp.debuggers.customLaunchSetupCommands.description": "指定した場合、ターゲットを起動するために使われる既定のコマンドが、他のいくつかのコマンドに置き換えられます。たとえば、ターゲット プロセスにアタッチするためには、\"-target-attach\" と指定します。空のコマンド リストを指定すると、起動コマンドは何とも置き換えられません。これは、デバッガーにコマンド ライン オプションとして起動オプションが提供されている場合に便利です。例: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }]。",
	"c_cpp.debuggers.launchCompleteCommand.description": "デバッガーが完全にセットアップされた後に、ターゲット プロセスを実行するために実行するコマンド。可能な値は、\"exec-run\"、\"exec-continue\"、\"None\" です。既定値は \"exec-run\" です。",
	"c_cpp.debuggers.cppdbg.visualizerFile.description": "このプロセスをデバッグするときに使用する .natvis ファイルです。このオプションは GDB の再フォーマットと互換性がありません。この設定を使用する場合は、\"showDisplayString\" も参照してください。",
	"c_cpp.debuggers.cppvsdbg.visualizerFile.description": "このプロセスをデバッグするときに使用する .natvis ファイルです。",
	"c_cpp.debuggers.showDisplayString.description": "visualizerFile を指定すると、showDisplayString により表示文字列が有効になります。このオプションをオンにすると、デバッグ中にパフォーマンスが低下する可能性があります。",
	"c_cpp.debuggers.environment.description": "プログラムの環境に追加する環境変数。例: [ { \"name\": \"squid\", \"value\": \"clam\" } ]。",
	"c_cpp.debuggers.envFile.description": "環境変数の定義を含むファイルへの絶対パスです。このファイルには、行ごとに等号で区切られたキーと値のペアがあります。例: キー=値",
	"c_cpp.debuggers.additionalSOLibSearchPath.description": ".so ファイルの検索に使用する、セミコロンで区切られたディレクトリの一覧です。例: \"c:\\dir1;c:\\dir2\"。",
	"c_cpp.debuggers.MIMode.description": "MIDebugEngine が接続するコンソール デバッガーを示します。許可されている値は \"gdb\" \"lldb\" です。",
	"c_cpp.debuggers.miDebuggerPath.description": "MI デバッガー (gdb など) へのパス。これを指定しないと、デバッガーの検索はパスから開始されます。",
	"c_cpp.debuggers.miDebuggerArgs.description": "MI デバッガー (gdb など) の追加の引数。",
	"c_cpp.debuggers.miDebuggerServerAddress.description": "接続先の MI デバッガー サーバーのネットワークアドレスです (例: localhost: 1234)。",
	"c_cpp.debuggers.stopAtEntry.description": "オプションのパラメーターです。true の場合、デバッガーはターゲットのエントリポイントで停止します。processId が渡された場合は効果はありません。",
	"c_cpp.debuggers.debugServerPath.description": "起動するデバッグ サーバーの完全なパス (省略可能)。既定値は null です。",
	"c_cpp.debuggers.debugServerArgs.description": "デバッグ サーバー引数 (省略可能)。既定値は null です。",
	"c_cpp.debuggers.serverStarted.description": "デバッグ サーバー出力から検索する、サーバー開始のパターン (省略可能)。既定値は null です。",
	"c_cpp.debuggers.filterStdout.description": "サーバー開始のパターンを stdout ストリームから検索し、stdout をデバッグ出力にログ記録します。既定値は true です。",
	"c_cpp.debuggers.filterStderr.description": "サーバー開始のパターンを stderr ストリームから検索し、stderr をデバッグ出力にログ記録します。既定値は false です。",
	"c_cpp.debuggers.serverLaunchTimeout.description": "デバッガーが debugServer の起動を待機する時間 (ミリ秒、省略可能)。既定値は 10000 です。",
	"c_cpp.debuggers.coreDumpPath.description": "指定したプログラムのコア ダンプ ファイルへの完全なパス (省略可能)。既定値は null です。",
	"c_cpp.debuggers.cppdbg.externalConsole.description": "true の場合、デバッグ対象のためにコンソールが起動します。false の場合、Linux および Windows では、統合コンソールに表示されます。",
	"c_cpp.debuggers.cppvsdbg.externalConsole.description": "true の場合、デバッグ対象のためにコンソールが起動します。false の場合、コンソールは起動しません。",
	"c_cpp.debuggers.avoidWindowsConsoleRedirection.description": "true の場合、統合ターミナルのサポートに必要なデバッグ対象のコンソール リダイレクトが無効になります。",
	"c_cpp.debuggers.sourceFileMap.description": "デバッグ エンジンに渡されたソース ファイル マッピングです (オプション)。例: '{ \"/original/source/path\":\"/current/source/path\" }'",
	"c_cpp.debuggers.processId.anyOf.description": "デバッガーをアタッチするためのオプションのプロセス ID です。\"${command:pickProcess}\" を使用すれば、アタッチ先のローカルで実行されているプロセスの一覧を取得できます。一部のプラットフォームでは、プロセスにアタッチするには管理者特権が必要です。",
	"c_cpp.debuggers.symbolSearchPath.description": "シンボル (つまり、pdb) ファイルの検索に使用する、セミコロンで区切られたディレクトリの一覧です。例: \"c:\\dir1;c:\\dir2\"。",
	"c_cpp.debuggers.dumpPath.description": "指定したプログラムのダンプ ファイルへの完全なパスです (オプション)。例: \"c:\\temp\\app.dmp\"。既定値は null です。",
	"c_cpp.debuggers.enableDebugHeap.description": "false の場合、プロセスはデバッグ ヒープを無効にして起動します。これにより、環境変数 '_NO_DEBUG_HEAP' は '1' に設定されます。",
	"c_cpp.debuggers.symbolLoadInfo.description": "シンボルの読み込みを明示的に制御します。",
	"c_cpp.debuggers.symbolLoadInfo.loadAll.description": "true の場合、すべてのライブラリのシンボルが読み込まれます。それ以外の場合、solib シンボルは読み込まれません。既定値は true です。",
	"c_cpp.debuggers.symbolLoadInfo.exceptionList.description": "セミコロン '; ' で区切られたファイル名の一覧 (ワイルドカードも使用可能)。LoadAll の動作が変更されます。LoadAll が true の場合は、一覧内の名前に一致するライブラリのシンボルを読み込まないでください。それ以外の場合は、一致するライブラリのシンボルのみを読み込んでください。例: \"foo.so;bar.so\"",
	"c_cpp.debuggers.requireExactSource.description": "PDB に一致する現在のソース コードを必要とする省略可能なフラグです。"
}